{"version":3,"sources":["../node_modules/peerjs/dist sync","pages/Index.tsx","pages/Loading.tsx","pages/Room.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Index","useState","roomId","setRoomId","onSubmit","preventDefault","window","location","href","type","name","onChange","target","value","Loading","tryToServe","a","Promise","reject","peer","Peer","on","console","log","d","debug","tryToJoin","conn","connect","Room","useEffect","catch","App","undefined","room","setRoom","URLSearchParams","search","get","mainComponent","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,yGCNV,SAASC,IAAS,IAAD,EACFC,mBAAiB,IADf,mBACvBC,EADuB,KACfC,EADe,KAQ9B,OACE,6CAEE,sBAAMC,SARV,SAAkBZ,GAChBA,EAAEa,iBACFC,OAAOC,SAASC,KAAhB,gBAAgCN,IAM9B,SACE,uBACEO,KAAK,OACLC,KAAK,SACLC,SAAU,SAACnB,GAAD,OAAOW,EAAUX,EAAEoB,OAAOC,eCjB/B,SAASC,IACtB,OAAO,+C,oDCEMC,E,8EAAf,WAA0BhB,GAA1B,SAAAiB,EAAA,+EACS,IAAIC,SAAQ,SAACrB,EAASsB,GAC3B,IAAMC,EAAO,IAAIC,IAAJ,6BAA+BrB,IAC5CoB,EAAKE,GAAG,QAAQ,SAAUtB,GACxBuB,QAAQC,IAAI,kBAAoBxB,GAChCH,EAAQuB,MAEVA,EAAKE,GAAG,cAAc,SAACG,GACrBF,QAAQG,MAAM,iBAAkBD,MAElCL,EAAKE,GAAG,SAAS,SAAC7B,GAChB0B,WAXN,4C,+BAgBeQ,E,8EAAf,WAAyB3B,GAAzB,SAAAiB,EAAA,+EACS,IAAIC,SAAQ,SAACrB,EAASsB,GAC3B,IAAMC,EAAO,IAAIC,IACjBD,EAAKE,GAAG,QAAQ,SAAUtB,GACxBuB,QAAQC,IAAI,kBAAoBxB,GAChC,IAAI4B,EAAOR,EAAKS,QAAL,6BAAmC7B,IAC9C4B,EAAKN,GAAG,QAAQ,WACdC,QAAQG,MAAM,wBAEhBE,EAAKN,GAAG,SAAS,SAAC7B,GAChB8B,QAAQG,MAAM,QAASjC,MAEzBI,EAAQuB,UAZd,4C,sBAiBe,SAASU,EAAT,GAAuC,IAAvB9B,EAAsB,EAAtBA,GAO7B,OANA+B,qBAAU,WAAM,4CACd,sBAAAd,EAAA,sEACeD,EAAWhB,GAAIgC,OAAM,kBAAML,EAAU3B,MADpD,oFADc,uBAAC,WAAD,wBAId6B,KACC,CAAC7B,IACG,8CAASA,KClBHiC,MAnBf,WAAgB,IAAD,EACW/B,wBAAoCgC,GAD/C,mBACNC,EADM,KACAC,EADA,KAGbL,qBAAU,WACRK,EAAQ,IAAIC,gBAAgB9B,OAAOC,SAAS8B,QAAQC,IAAI,WACvD,IAEH,IAAMC,EACK,OAATL,EACE,cAAClC,EAAD,SACWiC,IAATC,EACF,cAACpB,EAAD,IAEA,cAACe,EAAD,CAAM9B,GAAImC,IAGd,OAAO,qBAAKM,UAAU,MAAf,SAAsBD,KCRhBE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac4c61e8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 16;","import React, { useState } from \"react\";\n\nexport default function Index() {\n  const [roomId, setRoomId] = useState<string>(\"\");\n\n  function onSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    window.location.href = `?room=${roomId}`;\n  }\n\n  return (\n    <>\n      Start\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"roomId\"\n          onChange={(e) => setRoomId(e.target.value)}\n        />\n      </form>\n    </>\n  );\n}\n","export default function Loading() {\n  return <>Loading</>;\n}\n","import Peer from \"peerjs\";\nimport { useEffect } from \"react\";\n\nasync function tryToServe(id: string): Promise<Peer> {\n  return new Promise((resolve, reject) => {\n    const peer = new Peer(`remote-scrum-cards-${id}`);\n    peer.on(\"open\", function (id) {\n      console.log(\"My peer ID is: \" + id);\n      resolve(peer);\n    });\n    peer.on(\"connection\", (d) => {\n      console.debug(\"new connection\", d);\n    });\n    peer.on(\"error\", (e) => {\n      reject();\n    });\n  });\n}\n\nasync function tryToJoin(id: string): Promise<Peer> {\n  return new Promise((resolve, reject) => {\n    const peer = new Peer();\n    peer.on(\"open\", function (id) {\n      console.log(\"My peer ID is: \" + id);\n      var conn = peer.connect(`remote-scrum-cards-${id}`);\n      conn.on(\"open\", () => {\n        console.debug(\"Opened connection\");\n      });\n      conn.on(\"error\", (e) => {\n        console.debug(\"error\", e);\n      });\n      resolve(peer);\n    });\n  });\n}\n\nexport default function Room({ id }: { id: string }) {\n  useEffect(() => {\n    async function connect() {\n      return await tryToServe(id).catch(() => tryToJoin(id));\n    }\n    connect();\n  }, [id]);\n  return <>I rum {id}</>;\n}\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Index from \"./pages/Index\";\nimport Loading from \"./pages/Loading\";\nimport Room from \"./pages/Room\";\n\nfunction App() {\n  const [room, setRoom] = useState<string | null | undefined>(undefined);\n  // new URLSearchParams(window.location.search).get(\"room\"));\n  useEffect(() => {\n    setRoom(new URLSearchParams(window.location.search).get(\"room\"));\n  }, []);\n\n  const mainComponent =\n    room === null ? (\n      <Index />\n    ) : room === undefined ? (\n      <Loading />\n    ) : (\n      <Room id={room} />\n    );\n\n  return <div className=\"App\">{mainComponent}</div>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}